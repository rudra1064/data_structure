//Program For Binary Search
#include<iostream>
using namespace std;
int binaryserach(int arr[],int low,int high,int x){
    while(low<=high){
        int mid=(low+high)/2;
        if (arr[mid]==x){
            return mid;
    }
        if(arr[mid]<x){
            low=mid+1;
        }
        else{
            high=mid-1;
        }
}
return -1;
}
//Using Recursion Call
int binarysearchRecursionCall(int arr[],int low,int high,int x){
    if(low>high){
        return -1;
    }
    int mid=(low+high)/2;
    if(arr[mid]==x){
        return mid;
    }
    if(arr[mid]<x){
        return binarysearchRecursionCall(arr,mid+1,high,x);
    }
    else{
        return binarysearchRecursionCall(arr,low,mid-1,x);
    }
}
int main(){
int arr[]={1,2,3,4,5,6,7,};
int n=sizeof(arr)/sizeof(arr[0]);
int x=6;
int result=binaryserach(arr,0,n-1,x);
(result==-1)
? cout<<"Element is not present"
: cout<<"Element present at "<<result<<" Position"<<endl;
cout<<"--------------------------------"<<endl;
cout<<"Present at "<<binarysearchRecursionCall(arr,0,n-1,x)<<" Position"<<endl;
return 0;
}
